name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Make application-prod.yml
        run: |
          mkdir -p src/main/resources
          echo "${{ secrets.APPLICATION_PROD }}" > src/main/resources/application-prod.yml

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build Spring Application
        run: ./gradlew build -x test

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/my-spring-app:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/my-spring-app:latest

      - name: Deploy to AWS EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.AWS_KEY }}
          script: |
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/my-spring-app:latest
            sudo docker stop my-spring-container || true
            sudo docker rm my-spring-container || true
            sudo docker run -d --name my-spring-container -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/my-spring-app:latest

      - name: Call External API
         env:
          API_KEY: ${{ secrets.API_KEY }}
          API_BASE_URL: ${{ secrets.API_BASE_URL }}
        run: |
          ./gradlew bootRun

